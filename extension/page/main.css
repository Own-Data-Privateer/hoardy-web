@layer defaults, seasonal, overrides, highlight;

@layer defaults {
:root {
    /* to prevent light-to-dark storbbing */
    background-color: #000;
    color: #000;

    /* defaults */
    --a-external: #d80000;
    --a-internal: #008800;
    --a-local: #a86800;
    --attention-background-1: #e02020;
    --attention-background-2: #ffffff;
    --attention-border-color: var(--attention-background-1);
    --attention-color: var(--text-color);
    --button-background: #f0f0f0;
    --button-border-color: var(--input-border-color);
    --button-color: var(--text-color);
    --code-background: #00ff0010;
    --code-border-color: #f8f80020;
    --code-text-color: var(--text-color);
    --help-btn-background: #aaaaaa;
    --help-btn-border-color : #bbbbbb;
    --help-btn-checked-background: #666666;
    --help-btn-checked-border-color : #888888;
    --help-btn-checked-color: #ffffff;
    --help-btn-color: #fafafa;
    --help-tip-background: #fffffa;
    --help-tip-border-color: #aaaaaa;
    --help-tip-text: var(--text-color);
    --tag-background: inherit;
    --tag-color: var(--text-color);
    --active-tag-background: #d0d0d0;
    --active-tag-color: var(--text-color);
    --active-tag-underline: #a0f0a0;
    --hover-background: #d0d0d0;
    --hover-border-color: #808080;
    --hover-color: var(--text-color);
    --input-background: var(--text-background);
    --input-border-color: var(--separator-color);
    --input-color: var(--text-color);
    --outline-color: #aaaaaa;
    --separator-color: #000000;
    --target-background-1: #ffaa00;
    --target-background-2: #ffaa0040;
    --target-color: var(--text-color);
    --text-background: inherit;
    --text-color: inherit;
    --text-inactive-background: #cfcfcf;
    --text-inactive-color: #afafaf;
    --text-shadow-color: #000000;
    --toggle-background-bad: #fb3230;
    --toggle-background-good: #02bb50;
    --toggle-background: #f8f850;
    --toggle-border-color-bad: #94023e;
    --toggle-border-color-good: #05943e;
    --toggle-border-color: #f49405;
    --toggle-dot-background: #ffffff;
    --toggle-dot-border-color: #000000;
    --untoggle-background-bad: #f89494;
    --untoggle-background-good: #94f894;
    --untoggle-background: #dfdfdf;
    --untoggle-border-color-bad: #a88f8f;
    --untoggle-border-color-good: #8fa88f;
    --untoggle-border-color: #8f8f8f;
    --untoggle-dot-background: #ffffff;
    --untoggle-dot-border-color: #000000;
}

.light {
    background-color: #ffffff;
    color: #000000;
}

.colorblind {
    --a-internal: #000088;
    --code-background: #0000ff10;
    --toggle-background-good: #0250bb;
    --toggle-border-color-good: #053e94;
    --untoggle-background-good: #9494f855;
    --untoggle-border-color-good: #cfcfd8;
}

.dark {
    background-color: #0c0b12;
    color: #fff;

    --a-external: #f80000;
    --a-local: #ffaa00;
    --attention-background-2: #000000;
    --button-background: #101010;
    --code-background: #00ff0020;
    --code-border-color: #f8f80030;
    --help-btn-background: #333333;
    --help-btn-border-color : #666666;
    --help-btn-checked-background: #aaaaaa;
    --help-btn-checked-border-color : #bbbbbb;
    --help-btn-checked-color: #060606;
    --help-btn-color: #aaaaaa;
    --help-tip-background: #000005;
    --active-tag-background: #333333;
    --active-tag-underline: #d0f0d0;
    --hover-background: #505050;
    --hover-border-color: #e0e0e0;
    --outline-color: #666666;
    --separator-color: #ffffff;
    --text-inactive-background: #303030;
    --text-inactive-color: #505050;
    --text-shadow-color: #ffffff;
    --untoggle-background: #515138;
}

.dark.colorblind {
    --code-background: #0000ff20;
}

#body {
    font: 16px sans-serif;
}

.flex {
    display: flex;
}

.float-right {
    float: right;
}

.left {
    margin-right: auto;
}

.center {
    margin-left: auto;
    margin-right: auto;
}

.right {
    margin-left: auto;
}

h1, h2, h3, h4,
p, span, label,
pre, code, a {
    color: var(--text-color);
}

a, code {
    overflow-wrap: anywhere;
}

code {
    --text-background : var(--code-background);
    --text-color: var(--code-text-color);
    background: var(--text-background);
    border-radius: 5px;
    border: 1px solid var(--code-border-color);
    line-height: 14px;
}

pre code {
    display: inline-block;
    max-width: calc(100% - 20px);
    overflow: auto;
    padding: 10px;
}

.flex code {
    margin: auto 0.5ch;
}

a {
    --text-color: var(--a-external);
    text-decoration: solid underline;
}

/* points to a target on the same page */
.internal {
    --text-color: var(--a-internal);
    text-decoration: dotted underline;
}

/* points to a target on another local page */
.local {
    --text-color: var(--a-local);
    --text-shadow-color: var(--a-local);
    text-decoration: dotted underline;
    text-shadow: 0px 0px 2px var(--text-shadow-color);
}

.ui input {
    background: var(--input-background);
    border: 1px solid var(--input-border-color);
    border-radius: 3px;
    color: var(--input-color);
}

.ui input[type="button"] {
    background: var(--button-background);
    border: 1px solid var(--button-border-color);
    color: var(--button-color);
}

.ui input[type="number"]:hover,
.ui input[type="text"]:hover,
.ui input[type="button"]:hover {
    background: var(--hover-background);
    border: 1px solid var(--hover-border-color);
    color: var(--hover-color);
}

.ui input[type="checkbox"].toggle {
    appearance: none;
    background: var(--untoggle-background);
    border-radius: 8px;
    border: 1px solid var(--untoggle-border-color);
    box-sizing: border-box;
    height: 16px;
    margin: 0;
    padding: 0;
    width: 26px;
}

.ui input[type="checkbox"].toggle:checked {
    background: var(--toggle-background);
    border-color: var(--toggle-border-color);
}

.ui .prefer-off input[type="checkbox"].toggle {
    --toggle-background: var(--toggle-background-bad);
    --toggle-border-color: var(--toggle-border-color-bad);
    --untoggle-background: var(--untoggle-background-good);
    --untoggle-border-color: var(--untoggle-border-color-good);
}

.ui .prefer-on input[type="checkbox"].toggle {
    --toggle-background: var(--toggle-background-good);
    --toggle-border-color: var(--toggle-border-color-good);
    --untoggle-background: var(--untoggle-background-bad);
    --untoggle-border-color: var(--untoggle-border-color-bad);
}

.ui input[type="checkbox"].toggle::before {
    background: var(--untoggle-dot-background);
    border-radius: 50%;
    content: "";
    display: block;
    font: 12px sans-serif;
    height: 12px;
    outline: 1px solid var(--untoggle-dot-border-color);
    transform: translate(1px, calc(50% - 5px));
    transition: transform 500ms;
    width: 12px;
}

.ui input[type="checkbox"].toggle:checked::before {
    background: var(--toggle-dot-background);
    outline: 1px solid var(--toggle-dot-border-color);
    transform: translate(11px, calc(50% - 5px));
}

.ui label:hover input[type="checkbox"].toggle::before {
    --toggle-dot-background: var(--hover-background);
    --untoggle-dot-background: var(--hover-background);
}

.ui .tristate input[type="checkbox"].toggle {
    width: 32px;
}

.ui .tristate input[type="checkbox"].toggle.false {
    background: var(--toggle-background-bad);
    border-color: var(--toggle-border-color-bad);
}

.ui .tristate input[type="checkbox"].toggle:checked {
    background: var(--toggle-background-good);
    border-color: var(--toggle-border-color-good);
}

.ui .tristate input[type="checkbox"].toggle::before {
    transform: translate(9px, calc(50% - 5px));
}

.ui .tristate input[type="checkbox"].toggle.false::before {
    transform: translate(1px, calc(50% - 5px));
}

.ui .tristate input[type="checkbox"].toggle:checked::before {
    transform: translate(16px, calc(50% - 5px));
}

.help-root {
    white-space: nowrap;
}

input[type="checkbox"].help-btn {
    appearance: unset;
    background: var(--help-btn-background);
    border-radius: 50%;
    border: 1px solid var(--help-btn-border-color);
    box-sizing: border-box;
    height: 16px;
    margin: 0 0 0 5px;
    padding: 0;
    width: 16px;
}

input[type="checkbox"].help-btn:after {
    content: "?";
    margin-left: calc(8px - 0.5ch);
    color: var(--help-btn-color);
}

input[type="checkbox"].help-btn:checked {
    background: var(--help-btn-checked-background);
    border-color: var(--help-btn-checked-border-color);
}

input[type="checkbox"].help-btn:checked:after {
    color: var(--help-btn-checked-color);
}

div.help-tip {
    position: absolute;
    z-index: 20;

    background: var(--help-tip-background);
    border-radius: 3px;
    border: 1px solid var(--help-tip-border-color);
    box-shadow: 1px 1px 3px var(--box-shadow-color);
    color: var(--help-tip-text);
    font: 12px sans-serif;
    padding: 4px;
    text-align: left;
    white-space: pre-line;
}

.ui .genui,
.ui .genui label {
    display: flex;
}

.ui .genui label,
.ui .genui label input[type="number"],
.ui .genui label input[type="text"] {
    flex: 1 1 auto;
    margin: auto 0;
}

.ui .genui label input[type="number"] {
    width: 8ch;
    max-width: 16ch;
}

.ui .genui label input[type="number"],
.ui .genui label input[type="text"],
.ui .genui label input[type="checkbox"] {
    margin: auto 0;
}

.ui .genui label input[type="checkbox"]:nth-child(1) {
    margin-right: 1ch;
}

.ui .genui label input[type="number"]:nth-last-child(1),
.ui .genui label input[type="text"]:nth-last-child(1) {
    margin-left: 1ch;
}

.ui .genui.c label input[type="number"],
.ui .genui.c label input[type="text"],
.ui .genui.c label input[type="checkbox"] {
    margin: auto 1ch;
}

.ui .genui label code {
    margin: auto 0.5ch;
}
}

@layer highlight {
/* HTML node highlighter, can't use :target because some nodes are
   procedurally generated */
.target {
    background: var(--target-background-1);
    border: 0px solid black;
    border-radius: 5px;
    color: var(--target-color);

    animation-name: highlight;
    animation-duration: 5s;
    animation-timing-function: linear;
    animation-iteration-count: infinite;
}

.target * {
    background: #0000;
    color: var(--target-color);
}

.target h1,
.target h2,
.target h3,
.target h4 {
    background: var(--target-background-1);
    color: var(--target-color);
}

@keyframes highlight {
    from {
        background-color: var(--target-background-1);
    }
    50% {
        background-color: var(--target-background-2);
    }
    to {
        background-color: var(--target-background-1);
    }
}

/* similar to .target, but for things needing user's attention at some
   later point in time */
.attention,
input.attention {
    border: 5px solid var(--attention-border-color);
    border-radius: 5px;
    background: var(--attention-background-1);
    color: var(--attention-color);
    animation-name: attention;
    animation-duration: 5s;
    animation-timing-function: ease-in-out;
    animation-iteration-count: infinite;
}

@keyframes attention {
    from {
        background-color: var(--attention-background-1);
    }
    50% {
        background-color: var(--attention-background-2);
    }
    to {
        background-color: var(--attention-background-1);
    }
}
}

@layer seasonal {
.season {
    /* misc */
    --day: #ffffff;
    --night: #000000;
    --moonlight: #dfdfdf;

    --button-border-color: var(--good);
    --button-color: var(--day);
    --code-background: #aabb0030;
    --code-border-color: #f8f80030;
    --code-text-color:  var(--main);
    --input-border-color: var(--main);
    --input-color: var(--day);
    --text-color: var(--day);
    --toggle-background-bad: var(--bad-dark);
    --toggle-background-good:  var(--good-dark);
    --toggle-background: var(--day);
    --toggle-border-color-bad: var(--bad);
    --toggle-border-color-good: var(--good);
    --toggle-border-color:  var(--moonlight);
    --toggle-dot-background: var(--moonlight);
    --toggle-dot-border-color: var(--night);
    --untoggle-background-bad: var(--bad);
    --untoggle-background-good: var(--good);
    --untoggle-background: var(--night);
    --untoggle-border-color-bad: var(--bad-dark);
    --untoggle-border-color-good: var(--good-dark);
    --untoggle-border-color: var(--moonlight);
    --untoggle-dot-background: var(--moonlight);
    --untoggle-dot-border-color: var(--night);
}

.halloween {
    /* pumpkin */
    --main: #f49405;
    /* juice */
    --good-dark: #94023e;
    --good: #d4023e;
    /* water */
    --bad-dark: #023e94;
    --bad: #023ed4;

    --outline-color: #804000;
    --separator-color: #ffbb10;
    --text-shadow-color: var(--day);
}

.winter {
    /* juice */
    --main: #ff021e;
    /* pine */
    --good-dark: #204000;
    --good: #64b405;
    /* mud */
    --bad-dark: #402000;
    --bad: #804000;

    --outline-color: #44021e;
    --separator-color: #dd1000;
    --text-shadow-color: var(--main);

    --a-external: #0000f8;
}

.season h1,
.season h2,
.season h3,
.season h4 {
    --text-color: var(--main);
    text-shadow: 0px 0px 1em var(--text-shadow-color);
}

.season .ui input {
    --box-shadow-color: var(--main);
    box-shadow: 0px 0px 1em var(--box-shadow-color);
}

.season .ui input[type="button"] {
    --box-shadow-color: var(--good);
    box-shadow: 0px 0px 1em var(--box-shadow-color);
}

.season input[type="checkbox"].help-btn {
    --box-shadow-color: var(--moonlight);
    box-shadow: 0px 0px 0.75em var(--box-shadow-color);
}

.season input[type="checkbox"].toggle {
    --box-shadow-color: var(--day);
    box-shadow: 0px 0px 1em var(--box-shadow-color);
}

.season .ui .boolean label {
    --text-color: var(--good);
    text-shadow: 0px 0px 1em var(--text-shadow-color);
}

.halloween .ui .boolean label {
    --text-shadow-color: var(--good);
}

.season label:hover input[type="checkbox"].toggle::before {
    --toggle-dot-background: #808080;
    --untoggle-dot-background: #808080;
    --toggle-dot-border-color: var(--day);
    --untoggle-dot-border-color: var(--day);
}

.season input[type="checkbox"].toggle::before {
    color: var(--night);
    padding: 3px;
    transform: translate(-8px, calc(50% - 7px));
}

.halloween input[type="checkbox"].toggle::before {
    content: "🦇";
}

.winter input[type="checkbox"].toggle::before {
    content: "🎄";
}

.season input[type="checkbox"].toggle:checked::before {
    transform: translate(14px, calc(50% - 15px));
}

.season .ui .tristate input[type="checkbox"].toggle {
    --untoggle-background: var(--text-inactive-background);
    --untoggle-border-color: var(--text-inactive-color);
}

.season .ui .tristate input[type="checkbox"].toggle::before {
    transform: translate(6px, calc(50% - 11px));
}

.season .ui .tristate input[type="checkbox"].toggle.false::before {
    transform: translate(-8px, calc(50% - 7px));
}

.season .ui .tristate input[type="checkbox"].toggle:checked::before {
    transform: translate(19px, calc(50% - 15px));
}
}
